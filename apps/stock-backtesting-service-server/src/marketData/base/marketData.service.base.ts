/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MarketData as PrismaMarketData } from "@prisma/client";

export class MarketDataServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MarketDataCountArgs, "select">
  ): Promise<number> {
    return this.prisma.marketData.count(args);
  }

  async marketDataItems(
    args: Prisma.MarketDataFindManyArgs
  ): Promise<PrismaMarketData[]> {
    return this.prisma.marketData.findMany(args);
  }
  async marketData(
    args: Prisma.MarketDataFindUniqueArgs
  ): Promise<PrismaMarketData | null> {
    return this.prisma.marketData.findUnique(args);
  }
  async createMarketData(
    args: Prisma.MarketDataCreateArgs
  ): Promise<PrismaMarketData> {
    return this.prisma.marketData.create(args);
  }
  async updateMarketData(
    args: Prisma.MarketDataUpdateArgs
  ): Promise<PrismaMarketData> {
    return this.prisma.marketData.update(args);
  }
  async deleteMarketData(
    args: Prisma.MarketDataDeleteArgs
  ): Promise<PrismaMarketData> {
    return this.prisma.marketData.delete(args);
  }
}
